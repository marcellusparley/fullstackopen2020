{"version":3,"sources":["services/numbers.js","components/Filter.js","components/NumList.js","components/AddNumber.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newNumber","post","res","id","put","delete","Filter","handler","value","onChange","Person","person","name","number","onClick","NumList","filter","persons","map","p","key","AddNumber","num","hName","hNum","addNum","type","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","setNewNumber","newFilter","setNewFilter","setNewNotification","useEffect","numService","resData","catch","err","notify","error","console","log","mtype","setTimeout","e","target","preventDefault","perOld","find","window","confirm","returnedPerson","per","concat","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d94326e.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getNumbers = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst createNumber = (newNumber) => {\n    const request = axios.post(baseUrl, newNumber);\n    return request.then(res => res.data);\n}\n\nconst updateNumber = (id, newNumber) => {\n    const request = axios.put(`${baseUrl}/${id}`, newNumber);\n    return request.then(res => res.data);\n}\n\nconst deleteNumber = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(res => res.data);\n}\n\nexport default { getNumbers, createNumber, updateNumber, deleteNumber};","import React from 'react';\n\nconst Filter = ({ handler, value }) => {\n  return (\n    <div>\n      Filter <input onChange={handler} value={value} />\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\n\nconst NumList = ({ filter, persons, handler }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.filter(filter).map((p) => {\n          return (\n            <Person \n              key={p.name} \n              person={p} \n              handler={handler} \n            />\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nconst Person = ({ person, handler }) => {\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={() => handler(person.id, person.name)}>Delete</button>\n    </li>\n  )\n}\n\nexport default NumList;","import React from 'react';\n\nconst AddNumber = ({ name, num, hName, hNum, addNum }) => {\n  return (\n    <div>\n      <h2>Add Number</h2>\n      <form>\n        <div>\n          Name: <input onChange={hName} value={name} />\n        </div>\n        <div>\n          Number: <input onChange={hNum} value={num} />\n        </div>\n        <div>\n          <button onClick={addNum} type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddNumber;","import React, {useEffect, useState} from 'react';\nimport numService from './services/numbers';\nimport Filter from './components/Filter';\nimport NumList from './components/NumList';\nimport AddNumber from './components/AddNumber';\n\n/* App is the top component it handles the state and logic.\n * Filter is just the search form\n * NumList displays the filtered list of numbers with delete buttons\n * AddNumber is the form for adding or changing numbers\n * numService handles all the interaction with server\n */\n\nconst Notification = ({notification}) => {\n  if (notification === null) {\n    return null;\n  }\n\n  return (\n    <div className={notification.type}>{notification.message}</div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ newFilter, setNewFilter ] = useState('');\n  const [ notification, setNewNotification ] = useState(null);\n\n  //Initial fetching of phonebook data from server\n  useEffect(() => {\n    numService\n      .getNumbers()\n      .then(resData => {\n        setPersons(resData);\n      })\n      .catch(err => {\n        notify(err.response.data.error, 'error');\n        console.log(err.response.data);\n      })\n  }, []);\n\n  const handleNameChange = (e) => {\n    //console.log(e.target.value);\n    setNewName(e.target.value);\n  }\n\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  }\n\n  const notify = (message, mtype) => {\n    setNewNotification(\n      {\n        message: message,\n        type: mtype\n      }\n    );\n\n    setTimeout(() => {\n      setNewNotification(null);\n    }, 5000)\n  }\n\n  //Handler for add number button\n  const addNumber = (e) => {\n    e.preventDefault();\n    const perOld = persons.find(p => p.name === newName);\n\n    //Check if person's number is already in phonebook and asks\n    //if user would like to update their number\n    if (perOld) {\n      if (window.confirm(`Would you like to update ${newName}'s number?`)) {\n        numService\n          .updateNumber(perOld.id, {name: newName, number: newNumber})\n          .then(returnedPerson => {\n            setPersons(persons.map(per => per.id !== perOld.id ? per : returnedPerson));\n            setNewNumber('');\n            setNewName('');\n            notify(`Updated ${newName}'s number`, 'success')\n          })\n          .catch(err => {\n            console.log(err);\n            notify(err.response.data.error, 'error');\n            //setPersons(persons.filter(p => p.name !== newName && p.number !== newNumber));\n          })\n      }\n    } else {\n      numService\n        .createNumber({name: newName, number: newNumber})\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          notify(`Added ${newName}'s number`, 'success')\n        })\n        .catch(err => {\n          notify(err.response.data.error, 'error');\n          console.log(err.response.data);\n        })\n    }\n  }\n\n  //Handler for delete button\n  //Asks user if they are sure they want to delete\n  const deleteHandler = (id, name) => {\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      numService \n        .deleteNumber(id)\n        .then(res => {\n          setPersons(persons.filter(p => p.id !== id));\n          notify(`Deleted ${name}'s number`, 'success');\n        })\n        .catch(e => {\n          //alert(`Unable to delete number for ${name}`);\n          notify(\n            `Couldn't delete ${name}'s number, already removed from server`,\n            'error'\n          );\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n  }\n\n  const filterNumbers = (person) => {\n    return person.name.toLowerCase().includes(newFilter.toLowerCase());\n  }\n\n  return (\n    <div>\n      <Notification notification={notification} />\n      <h1>Phonebook</h1>\n      <Filter handler={handleFilterChange} value={newFilter} />\n      <AddNumber name={newName} num={newNumber} hName={handleNameChange} \n        hNum={handleNumberChange} addNum={addNumber} />\n      <NumList filter={filterNumbers} persons={persons} handler={deleteHandler} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}